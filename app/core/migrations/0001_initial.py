# Generated by Django 3.2.18 on 2023-04-26 09:45

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('first_name', models.CharField(max_length=255)),
                ('gender', models.CharField(choices=[('男性', '男性'), ('女性', '女性')], max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_family', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Questions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=50)),
                ('question_type', models.CharField(choices=[('食事', '食事'), ('運動', '運動'), ('睡眠', '睡眠')], max_length=10)),
                ('answer_type', models.CharField(choices=[('選択式', '選択'), ('真偽値', '真偽'), ('数字', '数字')], max_length=10)),
                ('is_neccessary', models.BooleanField(default=True)),
                ('answer1', models.CharField(blank=True, choices=[('ゼロ', 'ゼロ'), (True, 'はい')], max_length=10)),
                ('answer2', models.CharField(blank=True, choices=[('少し', '少し'), (False, 'いいえ')], max_length=10)),
                ('answer3', models.CharField(blank=True, choices=[('まあまあ', 'まあまあ')], max_length=10)),
                ('answer4', models.CharField(blank=True, choices=[('たくさん', 'たくさん')], max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Vegetable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vegetable', models.CharField(max_length=255, unique=True)),
                ('color', models.CharField(max_length=255)),
                ('varieties', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_allergy', models.BooleanField(default=False)),
                ('is_unnecessary', models.BooleanField(default=False)),
                ('answer_type', models.CharField(max_length=255)),
                ('answer_choice', models.CharField(max_length=10, null=True)),
                ('answer_int', models.IntegerField(null=True)),
                ('answer_bool', models.BooleanField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('question', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.questions')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('vegetable', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.vegetable')),
            ],
        ),
    ]
